#!/usr/bin/env python3
import sys
from pathlib import Path

# by default, python does not include this path in its search path,
# so we have to explicitly insert the path to the musher directory
# in order to import it successfully
sys.path.insert(0, str(Path(__file__).resolve().parent.parent / "lib"))
from husky_musher.utils.redcap import LazyObjects, redcap_registration_complete

# XXX FIXME: This is copied from fetch_participant() and thus could drift out
# of sync.  I don't anticipate we'll use this script more than once or twice,
# but if we start doing so, it'd be better to remove the potential for drift.
# Note that the use of the "raw" flag and a "filter" to ensure we only pick up
# the instrument/event with a netid is also behaviour that's carefully matched
# to fetch_participant().  It, too, runs the risk of drifting out of sync.
fields = [
    'netid',
    'record_id',
    'eligibility_screening_complete',
    'consent_form_complete',
    'enrollment_questionnaire_complete',
]

records = LazyObjects.get_project().records(raw = True, fields = fields, filter = '[netid] <> ""')
print(f"{len(records):7,} records fetched")

n = 0

for record in records:
    netid = record.get("netid")

    if netid and redcap_registration_complete(record):
        LazyObjects.get_cache()[netid] = record
        n += 1

print(f"{n:7,} records cached")
print(f"{len(LazyObjects.get_cache()):7,} records in cache")
